'use strict';
var qtools = require('qtools'),
	qtools = new qtools(module),
	events = require('events'),
	util = require('util');

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {
	events.EventEmitter.call(this);
	this.forceEvent = forceEvent;
	this.args = args;
	this.ping=qtools.ping;

	qtools.validateProperties({
		subject: args,
		targetScope: this, //will add listed items to targetScope
		propList: [
			{
				name: 'url',
				optional: false
			},
			{
				name: 'authParms',
				optional: false
			}
		]
	});
	
	var self = this,
		forceEvent = function(eventName, outData) {
			this.emit(eventName, {
				eventName: eventName,
				data: outData
			});
		};

	//LOCAL FUNCTIONS ====================================

	var expand = function(result, body) {
		var type = result.headers['content-type'].match(/application\/json/) ? 'json' : '';
		switch (type) {
			case 'json':
				return JSON.parse(body);
				break;
			default:
				return body;
				break;
		}
	}

	//METHODS AND PROPERTIES ====================================



	//INITIALIZATION ====================================

	this.request = require('request');

	this.giveMeTheGoods = function(callback) {
		self.request.get({uri:self.url, headers:{username:self.authParms.userName, password:self.authParms.password}}, 
		function(err, result, body) {


			if (err || body.Status<0) {
				var errPackage={
						errno: -1,
						message: 'bad get for url: ' + self.url,
						evidence: err
					};
				global.localEnvironment.log.debug({errPackage:errPackage})

				callback(errPackage);
			} else {
				self.result = result;
				try{
					//console.log('result.body='+result.body.substr(0, 150)+'\n');
					self.body = expand(result, body);
				}
				catch(e) {
					callback({source:'apiAccess', type:'parse error', data:e})
					return;
				}
				
				
				callback('', self.body);
			}
		})
	}


	return this;
};

//END OF moduleFunction() ============================================================

util.inherits(moduleFunction, events.EventEmitter);
module.exports = moduleFunction;

