'use strict';
var qtools = require('qtools'),
	qtools = new qtools(module),
	events = require('events'),
	util = require('util');

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {
	events.EventEmitter.call(this);
	this.forceEvent = forceEvent;
	this.args = args;
	this.metaData = {};
	this.addMeta = function(name, data) {
		this.metaData[name] = data;
	}

	// 	qtools.validateProperties({
	// 		subject: args,
	// 		targetScope: this, //will add listed items to targetScope
	// 		propList: [
	// 			{
	// 				name: 'placeholder',
	// 				optional: true
	// 			}
	// 		]
	// 	});

	var self = this,
		forceEvent = function(eventName, outData) {
			this.emit(eventName, {
				eventName: eventName,
				data: outData
			});
		};


	//LOCAL FUNCTIONS ====================================

	var mappingTable = {
		"origJMC": 'proposedUFF',
		"address1": 'address1',
		"address2": 'address2',
		"address3": 'address3',
		"AddressTypeCode": 'addressTypeCode',
		"AdvisorID_Name": 'advisorIdName',
		"AmericanIndianAlaskaNative": 'americanIndianAlaskaNative',
		"Asian": 'asian',
		"AttendanceCategory": 'attendanceCategory',
		"AttendanceCode": 'attendanceCode',
		"AttendanceDate": 'attendanceDate',
		"attendanceDays": 'attendanceDays',
		"AttendanceTimeUnit": 'attendanceTimeUnit',
		"AttendanceType": 'attendanceType',
		"beginDate": 'beginDate',
		"begPeriodNum": 'beginningPeriodNumber',
		"BirthCountry": 'birthCountry',
		"BirthDate": 'birthDate',
		"birthDate": 'birthDate',
		"BirthPlace": 'birthPlace',
		"BirthState": 'birthState',
		"BlackAfricanAmerican": 'blackAfricanAmerican',
		"city": 'city',
		"ConcurrentEnrollment": 'concurrentEnrollment',
		"contactCode": 'contactCode',
		"contactEMail": 'contactEmail',
		"contactExtraMailingCode": 'contactExtraMailingCode',
		"contactFirstName": 'contactFirstName',
		"contactFullName": 'contactFullName',
		"contactLastName": 'contactLastName',
		"contactLegalCode": 'contactLegalCode',
		"contactMiddleName": 'contactMiddleName',
		"contactPhone1": 'contactPhone1',
		"contactPhone2": 'contactPhone2',
		"contactPhone3": 'contactPhone3',
		"contactSequence": 'contactSequence',
		"countyCode": 'countyCode',
		"CourseAbbrev": 'courseAbbreviation',
		"CourseCode": 'courseCode',
		"CourseDesc": 'courseDesc',
		"CourseNumber": 'courseNumber',
		"courseNumber": 'courseNumber',
		"Credit": 'credit',
		"credit": 'credit',
		"CreditsAttempted": 'creditsAttempted',
		"CreditsEarned": 'creditsEarned',
		"Defaultflag": 'defaultflag',
		"DisciplineCategory": 'disciplineCategory',
		"DisciplineCode": 'disciplineCode',
		"DisciplineDate": 'disciplineDate',
		"DisciplineTimeUnit": 'disciplineTimeUnit',
		"DispositionBeginDate": 'dispositionBeginDate',
		"DispositionCode": 'dispositionCode',
		"DispositionEndDate": 'dispositionEndDate',
		"DistCode": 'districtCode',
		"districtCode": 'districtCode',
		"districtType": 'districtType',
		"DistType": 'districtType',
		"dropDate": 'dropDate',
		"economicIndicator": 'economicIndicator',
		"ELLServiceLevel": 'ellServiceLevel',
		"endDate": 'endDate',
		"EndDate": 'endDate',
		"endPeriodNum": 'endPeriodNumber',
		"enrollmentStatus": 'enrollmentStatus',
		"entryDate": 'entryDate',
		"entryType": 'entryType',
		"entryTypeCode": 'entryTypeCode',
		"EthnicityCode": 'ethnicityCode',
		"ethnicityCode": 'ethnicityCode',
		"FirstName": 'firstName',
		"firstName": 'firstName',
		"FirstUSSchoolEntryDate": 'firstUsSchoolEntryDate',
		"flag504": '504Flag',
		"FullName": 'fullName',
		"fullName": 'fullName',
		"Gender": 'gender',
		"gender": 'gender',
		"giftedTalentedPartiicipation": 'giftedTalentedParticipation',
		"GPA1": 'gpa1',
		"GPA1ClassRank": 'gpa1ClassRank',
		"GPA1ClassRankPercentile": 'gpa1ClassRankPercentile',
		"GPA1ClassSize": 'gpa1ClassSize',
		"GPA2": 'gpa2',
		"GPA2ClassRank": 'gpa2ClassRank',
		"GPA2ClassRankPercentile": 'gpa2ClassRankPercentile',
		"GPA2ClassSize": 'gpa2ClassSize',
		"grade": 'gradeLevel',
		"gradeLevel": 'gradeLevel',
		"GradeLevel": 'gradeLevel',
		"GradeMark": 'gradeMark',
		"GradeMaximum": 'gradeMaximum',
		"GradeMinimum": 'gradeMinimum',
		"GraduationYear": 'graduationYear',
		"HispanicLatino": 'hispanicLatino',
		"homeBoundServiceIndicator": 'homeboundServiceIndicator',
		"homelessStudentFlag": 'homelessStudentFlag',
		"homePrimaryLanguage": 'homePrimaryLanguage',
		"homeroomFlag": 'homeroomFlag',
		"IncidentLocation": 'incidentLocation',
		"IncidentTime": 'incidentTime',
		"independentStudyFlag": 'independentStudyFlag',
		"lastLocationOfAttendance": 'lastLocationOfAttendance',
		"LastName": 'lastName',
		"lastName": 'lastName',
		"LastSchoolAttended": 'lastSchoolAttended',
		"lep": 'lep',
		"lepBeginDate": 'lepBeginDate',
		"LocalStaffCode": 'localStaffCode',
		"LocalStudentIdentifier": 'localStudentIdentifier',
		"localStudentNumber": 'localStudentIdentifier',
		"LocalStudentNumber": 'localStudentIdentifier',
		"location": 'location',
		"MARSSID": 'marssId',
		"membershipDays": 'membershipDays',
		"MiddleName": 'middleName',
		"migrantIndicator": 'migrantIndicator',
		"NativeHawaiianPacificIslander": 'nativeHawaiianPacificIslander',
		"NewToCountryFlag": 'newToCountryFlag',
		"NextYearSchool": 'nextYearSchool',
		"Note": 'note',
		"percentEnrolled": 'percentEnrolled',
		"PeriodCode": 'periodCode',
		"phone1Type": 'phone1Type',
		"phone2Type": 'phone2Type',
		"phone3Type": 'phone3Type',
		"postSecondaryOption": 'postSecondaryOption',
		"PreferredName": 'preferredName',
		"Prefix": 'prefix',
		"primaryDisability": 'primaryDisability',
		"PrimaryInstructorFlag": 'primaryInstructorFlag',
		"primarySchoolFlag": 'primaryLocaltionFlag',
		"programOfStudy": 'programOfStudy',
		"ProgramofStudy": 'programofStudy',
		"promotionStatus": 'promotionStatus',
		"PSEOHighSchoolParticipationHrs": 'pseoHighSchoolParticipationHrs',
		"ReferenceCode": 'referenceCode',
		"ReferenceType": 'referenceType',
		"ReferenceValue": 'referenceValue',
		"schoolCode": 'schoolCode',
		"SchoolCode": 'schoolCode',
		"SchoolLevelName": 'schoolLevelName',
		"SchoolYearBegin": 'schoolYearBegin',
		"schoolYearBegin": 'schoolYearBegin',
		"SchoolYearEnd": 'schoolYearEnd',
		"schoolYearEnd": 'schoolYearEnd',
		"SectionNumber": 'sectionNumber',
		"SelfGuardianFlag": 'selfGuardianFlag',
		"specEdFlag": 'specialEducationFlag',
		"specialEdInstructionalSetting": 'specialEducationInstructionalSetting',
		"specialEducationEvaluationStatus": 'specialEducationEvaluationStatus',
		"specialEnrollmentCode": 'specialEnrollmentCode',
		"SSN": 'socialSecurityNumber',
		"UniqueStaffCode": 'staffUniqueIdentifier',
		"StaffUniqueIdentifier": 'staffUniqueIdentifier',
		"staffUniqueIdentifier": 'staffUniqueIdentifier',
		"StartDate": 'startDate',
		"stateAidCategory": 'stateAidCategory',
		"stateCode": 'stateCode',
		"stateName": 'stateName',
		"StateStudentIdentifier": 'stateStudentIdentifier',
		"stateStudentNumber": 'stateStudentIdentifier',
		"StudentCode": 'stateStudentIdentifier',
		"studentResidentDistrictCode": 'studentResidentDistrictCode',
		"studentResidentDistrictType": 'studentResidentDistrictType',
		"studentResidentSchoolCode": 'studentResidentSchoolCode',
		"StudentStatus": 'studentStatus',
		"studentTitle1Indicator": 'studentTitle1Indicator',
		"StudentUniqueIdentifier": 'studentUniqueIdentifier',
		"studentUniqueIdentifier": 'studentUniqueIdentifier',
		"SubjAreaDep": 'subjectAreaDepartment',
		"Suffix": 'suffix',
		"supplementalEducationServices": 'supplementalEducationServices',
		"teamCode": 'teamCode',
		"termAbbrev": 'termAbbreviation',
		"TermAbbrev": 'termAbbreviation',
		"TermCode": 'termCode',
		"TimeIn": 'timeIn',
		"TimeOut": 'timeOut',
		"track": 'track',
		"transportationCategory": 'transportationCategory',
		"transportingDistrictCode": 'transportingDistrictCode',
		"transportingDistrictType": 'transportingDistrictType',
		"wardOfStateFlag": 'wardOfStateFlag',
		"White": 'white',
		"withdrawalDate": 'withdrawalDate',
		"withdrawalType": 'withdrawalType',
		"withdrawalTypeCode": 'withdrawalTypeCode',
		"zipCode": 'zipCode'
	};

// 	var tableNameMap={
// 		AddressContact:'ext.exContact',
// 		Course:'ext.exCourse',
// 		UserBase:'ext.exUserBase',
// 		Section:'ext.exSection',
// 		SectionStaff:'ext.exSectionStaff',
// 		SectionStudent:'ext.exSectionStudent',
// 		StudentAttendance:'ext.exStudentAttendance',
// 		StudentBase:'ext.exStudentBase',
// 		StudentDiscipline:'ext.exStudentDiscipline',
// 		StudentEnrollment:'ext.exStudentEnrollment',
// 		StudentGpa:'ext.exStudentGPA',
// 		StudentGradeLevels:'ext.exStudentGrades'
// 	}

	var tableNameMap={
		AddressContact:'ext.AddressContact',
		Course:'ext.Course',
		UserBase:'ext.UserBase',
		Section:'ext.Section',
		SectionStaff:'ext.SectionStaff',
		SectionStudent:'ext.SectionStudent',
		StudentAttendance:'ext.StudentAttendance',
		StudentBase:'ext.StudentBase',
		StudentDiscipline:'ext.StudentDiscipline',
		StudentEnrollment:'ext.StudentEnrollment',
		StudentGpa:'ext.StudentGPA',
		StudentGradeLevels:'ext.StudentGrades'
	}

	//METHODS AND PROPERTIES ====================================

	this.mapDistrictAccessName = function(dictionaryName) {
		return "SSI_XDI_" + dictionaryName;
	}

	this.mapSegmentAccessName = function(dictionaryName) {
		var mapResult=tableNameMap[dictionaryName];
		
		if (typeof(mapResult)!='undefined'){
			return mapResult;
		}
		else{
			return dictionaryName;
		}
	}
	
	this.mapQueryNames=function(query){
		return qtools.templateReplace({template:query, replaceObject:tableNameMap});
	}


	this.mapFieldNames = function(inData, stripNulls) {
		var outObj = {};
		for (var i in inData) {
			var element = inData[i],
				replacement = mappingTable[i];

			if (stripNulls && (element && element.toLowerCase() == 'null') || qtools.toType(element) == 'null') {
				element = '';
			}

			if (typeof (replacement) != 'undefined') {
				outObj[replacement] = element;
			} else {
				outObj[replacement] = element;
			}
		}
		return outObj;
	}

	this.mapFieldNamesList = function(inArray, stripNulls) {
		stripNulls = (typeof (stripNulls) == 'undefined') ? false : stripNulls;
		var outArray = [];
		for (var i = 0, len = inArray.length; i < len; i++) {
			var element = inArray[i];
			outArray.push(this.mapFieldNames(element, stripNulls));
		}
		return outArray;
	}


	this.serverType = 'mssql'; //could be 'file' 'mysql' or 'postgresql' or ...? //maps to something in the dictionary.definition

	//INITIALIZATION ====================================

	this.converterName = '';


	return this;
};

//END OF moduleFunction() ============================================================

util.inherits(moduleFunction, events.EventEmitter);
module.exports = moduleFunction;








